---
import { Image } from "astro:assets";
import front from "../../assets/svg/front.svg";
import back from "../../assets/svg/back.svg";
---

<main id="app">
  <section class="ticket">
    <header class="front">
      <div class="holo"></div>
      <Image
        class="logo"
        src={front}
        alt="The logo for the Application called Threads, an instagram App. It's a '@' symbol but with the tail going in the opposite direction."
      />
    </header>

    <section class="back">
      <Image
        class="logo"
        src={back}
        alt="The logo for the Application called Threads, an instagram App. It's a '@' symbol but with the tail going in the opposite direction."
      />
    </section>
  </section>
</main>

<style>
  @tailwind components;
  #app {
    perspective: 1500px;
    --o: 0;
    --p: 100%;
    --h: 50%;
    --r: 0;
    transform: translate3d(0, 0, 0.1px);
  }

  @layer components {
    #app {
      @apply place-items-center grid place-content-center
      lg:p-16 cursor-pointer w-full;
      font-family: "Proxima regular", system-ui, sans-serif;
      grid: 1fr/1fr;
    }
    .ticket {
      @apply grid lg:w-[20vw] md:w-[35vw] w-[70vw];
      grid-area: 1/1;
      aspect-ratio: var(--ar);
    }
    .front,
    .back {
      @apply overflow-hidden bg-[#dadada] bg-no-repeat rounded-2xl grid place-items-center
      w-full h-full;
      grid-area: 1/1;
      overflow: hidden;
      background-image: radial-gradient(
        circle at var(--p) 50%,
        #fff 10%,
        transparent 100%
      );
      background-size: 100% 150vh;
      background-position: center;
      backface-visibility: visible;
      transform: translateZ(1px);
      transform-style: preserve-3d;
      mask-image: var(--ticket);
      mask-size: cover;
      mask-repeat: no-repeat;
    }
    .front::after,
    .back::after {
      @apply absolute inset-0 z-10 pointer-events-none;
      content: "";
      background-image: linear-gradient(
        -70deg,
        transparent 40%,
        rgba(255, 255, 255, 0.5) 40.5%,
        transparent
      );
      background-size: 200% 200%;
      background-position: var(--p) var(--p);
      opacity: calc(var(--o) + 0.5);
    }
    .holo {
      @apply block absolute inset-0 rounded-2xl z-50;
    }
    .logo {
      @apply relative z-[2] w-full h-full;
      image-rendering: optimize-speed;
      image-rendering: crisp-edges;
    }
  }

  .ticket {
    --scale: 1;
    transform: translate3d(0, 0, 0.1px) scale(var(--scale)) rotateY(var(--r));
    transform-style: preserve-3d;
    pointer-events: auto;
  }

  .front {
    transform: rotateY(180deg) translateZ(1px);
  }

  .holo {
    --space: 5%;
    --red: rgba(255, 0, 0, 0.856);
    --orange: rgba(255, 128, 0, 0.794);
    --yellow: rgba(255, 255, 0, 0.765);
    --green: rgba(0, 255, 0, 0.769);
    --cyan: rgba(0, 255, 255, 0.863);
    --blue: rgba(0, 76, 255, 0.825);
    --purple: rgba(76, 0, 255, 0.876);
    --magenta: rgba(255, 0, 255, 0.857);
    background-image: repeating-linear-gradient(
      -45deg,
      var(--red) 0%,
      var(--orange) calc(var(--space) * 1),
      var(--yellow) calc(var(--space) * 2),
      var(--green) calc(var(--space) * 3),
      var(--cyan) calc(var(--space) * 4),
      var(--blue) calc(var(--space) * 5),
      var(--purple) calc(var(--space) * 6),
      var(--magenta) calc(var(--space) * 7),
      var(--red) calc(var(--space) * 8)
    );
    background-size: 150vw 150vh;
    background-position: calc(var(--h)) calc(var(--h));
    background-repeat: no-repeat;
    mask-image: var(--logopng);
    mask-size: 4% 4%;
    mask-repeat: repeat;
    mix-blend-mode: plus-lighter;
    filter: brightness(0.9) contrast(0.7) saturate(2);
    opacity: var(--o);
  }

  @media screen and (max-width: 400px) {
    .ticket {
      --scale: 0.75;
    }
  }
</style>

<script>
  import { gsap } from "gsap";

  // Create the animation timelines
  const speed = 4.5;
  const r = gsap.timeline({ repeat: -1 });
  const o = gsap.timeline({ repeat: -1 });
  const h = gsap.timeline({ repeat: -1 });

  r.to("#app", {
    "--r": "180deg",
    "--p": "0%",
    duration: speed,
    ease: "sine.in",
  });
  r.to("#app", {
    "--r": "360deg",
    "--p": "100%",
    duration: speed,
    ease: "sine.out",
  });
  o.to("#app", {
    "--o": 1,
    duration: speed / 2,
    ease: "power1.in",
  });
  o.to("#app", {
    "--o": 0,
    duration: speed / 2,
    ease: "power1.out",
  });

  h.to("#app", {
    "--h": "100%",
    duration: speed / 2,
    ease: "sine.in",
  });
  h.to("#app", {
    "--h": "50%",
    duration: speed / 2,
    ease: "sine.out",
  });
  h.to("#app", {
    "--h": "0%",
    duration: speed / 2,
    ease: "sine.in",
  });
  h.to("#app", {
    "--h": "50%",
    duration: speed / 2,
    ease: "sine.out",
  });

  // Pause the animation timelines on mouseenter
  const ticket = document.querySelector(".ticket");
  ticket.addEventListener("mouseenter", () => {
    r.pause();
    o.pause();
    h.pause();
  });

  // Resume the animation timelines on mouseleave
  ticket.addEventListener("mouseleave", () => {
    r.resume();
    o.resume();
    h.resume();
  });
</script>
